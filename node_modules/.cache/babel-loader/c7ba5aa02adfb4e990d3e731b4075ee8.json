{"ast":null,"code":"import _objectSpread from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory'; // import { throwStatement } from '@babel/types';\n\nimport fishes from '../sample-fishes';\nimport Fish from './Fish';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // How to always update a piece of state\n      // Take a copy of the existing state: you never want to reach into state and actually modify it directly -> mutation - when you reach directly into an obj which causes issues with performance and thing supdating ourt of order\n      var fishes = _objectSpread({}, _this.state.fishes); // copy of everything that is in state.\n      // Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // put that new updated state into state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. tke a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. either add to the order, or update the number in our order if order already exists\n\n\n      order[key] = order[key] + 1 || 1; // 3. call setstate to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"Wes is Cool\",\n        age: 500,\n        cool: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          index: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, {\n        order: this.state.order,\n        fishes: this.state.fishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/juliettech/code/wesbos/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","fishes","Fish","App","state","order","addFish","fish","Date","now","setState","loadSampleFishes","addToOrder","key","Object","keys","map","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNH,MAAAA,MAAM,EAAE,EADF;AAENI,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,O,GAAU,UAAAC,IAAI,EAAI;AAChB;AACA;AACA,UAAMN,MAAM,qBAAO,MAAKG,KAAL,CAAWH,MAAlB,CAAZ,CAHgB,CAGsB;AACtC;;;AACAA,MAAAA,MAAM,eAAQO,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CALgB,CAMhB;;AACA,YAAKG,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,K;;UAEDU,gB,GAAmB,YAAM;AACvB,YAAKD,QAAL,CAAc;AAAET,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAEDW,U,GAAa,UAAAC,GAAG,EAAI;AAClB;AACA,UAAMR,KAAK,qBAAQ,MAAKD,KAAL,CAAWC,KAAnB,CAAX,CAFkB,CAGlB;;;AACAA,MAAAA,KAAK,CAACQ,GAAD,CAAL,GAAaR,KAAK,CAACQ,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJkB,CAKlB;;AACA,YAAKH,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,aAAhB;AAA8B,QAAA,GAAG,EAAE,GAAnC;AAAwC,QAAA,IAAI,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWH,MAAvB,EAA+Be,GAA/B,CAAmC,UAAAH,GAAG;AAAA,eAAI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,GAAX;AAAgB,UAAA,OAAO,EAAE,MAAI,CAACT,KAAL,CAAWH,MAAX,CAAkBY,GAAlB,CAAzB;AAAiD,UAAA,UAAU,EAAE,MAAI,CAACD,UAAlE;AAA8E,UAAA,KAAK,EAAEC,GAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAtC,CADH,CAFF,CADF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAAzB;AAAgC,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWH,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKK,OAAzB;AAAkC,QAAA,gBAAgB,EAAE,KAAKK,gBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD;;;;EA5Ced,KAAK,CAACoB,S;;AA+CxB,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\n// import { throwStatement } from '@babel/types';\nimport fishes from '../sample-fishes';\nimport Fish from './Fish';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  addFish = fish => {\n    // How to always update a piece of state\n    // Take a copy of the existing state: you never want to reach into state and actually modify it directly -> mutation - when you reach directly into an obj which causes issues with performance and thing supdating ourt of order\n    const fishes = {...this.state.fishes} // copy of everything that is in state.\n    // Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // put that new updated state into state\n    this.setState({\n      fishes: fishes\n    })\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes });\n  };\n\n  addToOrder = key => {\n    // 1. tke a copy of state\n    const order = { ...this.state.order };\n    // 2. either add to the order, or update the number in our order if order already exists\n    order[key] = order[key] + 1 || 1;\n    // 3. call setstate to update our state object\n    this.setState({ order })\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline='Wes is Cool' age={500} cool={true} />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => <Fish key={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} index={key} />) }\n          </ul>\n        </div>\n        <Order order={this.state.order} fishes={this.state.fishes} />\n        <Inventory addFish={this.addFish} loadSampleFishes={this.loadSampleFishes} />\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}